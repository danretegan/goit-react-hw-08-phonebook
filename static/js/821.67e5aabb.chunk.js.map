{"version":3,"file":"static/js/821.67e5aabb.chunk.js","mappings":"uRAkIA,EA7HqB,WACnB,IAAAA,EAAeC,EAAAA,EAAAA,UAARC,GAAsBC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GACLI,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAApDC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAgCnB,OACEC,EAAAA,EAAAA,MAACX,EAAAA,GAAIY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAtBgB,CACrBC,SAAU,CACRC,KAAM,IAERC,WAAY,CACVD,KAAM,MAkBY,IAClBb,KAAMA,EACNe,KAAK,WACLC,SAnCa,SAAAC,GACf,IAAQF,EAAmCE,EAAnCF,KAAMG,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SAEjBA,IAFuCF,EAAZG,UAG7BlB,GAASmB,EAAAA,EAAAA,IAAS,CAAEN,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,MAChCX,IAAcC,GAAST,EAAKsB,cAEjC,EA6BIC,KAAM,UACNC,MAAO,CACLC,MAAO,KAETC,oBAAkB,EAAAC,SAAA,EAElBC,EAAAA,EAAAA,KAAC7B,EAAAA,EAAAA,KAAS,CACRgB,KAAK,QACLc,MAAM,SACNC,MAAO,CACL,CACEC,KAAM,QACNC,QAAS,mCAEX,CACEC,UAAU,EACVD,QAAS,6BAEXL,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,OAGRN,EAAAA,EAAAA,KAAC7B,EAAAA,EAAAA,KAAS,CACRgB,KAAK,WACLc,MAAM,WACNC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,gCAGbG,aAAW,EAAAR,UAEXC,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,SAAc,OAGjBN,EAAAA,EAAAA,KAAC7B,EAAAA,EAAAA,KAAS,CACRgB,KAAK,UACLc,MAAM,mBACNO,aAAc,CAAC,YACfD,aAAW,EACXL,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,iCAEX,SAAAK,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,IAAIC,MAAM,iDAHHF,QAAQG,SAKnB,EACD,GACDlB,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,SAAc,OAGjBN,EAAAA,EAAAA,KAAC7B,EAAAA,EAAAA,KAAS,CACRgB,KAAK,OACLc,MAAM,OACNC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,0BACTc,YAAY,IAEdnB,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,OAERN,EAAAA,EAAAA,KAAC7B,EAAAA,EAAAA,MAASY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GA7Fa,CACzBG,WAAY,CACViC,GAAI,CACFlC,KAAM,GACNmC,OAAQ,GAEVC,GAAI,CACFpC,KAAM,GACNmC,OAAQ,MAqFuB,IAAArB,UAC/BC,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACnB,KAAK,UAAUoB,SAAS,SAAQxB,SAAC,mBAMjD,EC5He,SAASyB,IACtB,OACExB,EAAAA,EAAAA,KAACyB,EAAAA,GAAc,CAAA1B,UACbjB,EAAAA,EAAAA,MAAA,OAAAiB,SAAA,EACEC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAAA3B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBAETC,EAAAA,EAAAA,KAAC2B,EAAY,QAIrB,C","sources":["components/registerForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n\nimport { register } from '../../redux/auth/auth-operations';\nimport { Button, Form, Input } from 'antd';\n\nconst RegisterForm = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.auth);\n\n  const onFinish = values => {\n    const { name, email, password, confirm } = values;\n\n    if (password === confirm) {\n      dispatch(register({ name, email, password }));\n      !isLoading && !error && form.resetFields();\n    }\n  };\n\n  const formItemLayout = {\n    labelCol: {\n      span: 24,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  };\n\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 4,\n      },\n    },\n  };\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      size={'default'}\n      style={{\n        width: 300,\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The email entered is not valid!',\n          },\n          {\n            required: true,\n            message: 'Please enter your email!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please enter your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(\n                new Error('The new password you entered does not match!')\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n            message: 'Please enter your name!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport RegisterForm from '../components/registerForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Register</title>\n        </Helmet>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["_Form$useForm","Form","form","_slicedToArray","dispatch","useDispatch","_useSelector","useSelector","state","auth","isLoading","error","_jsxs","_objectSpread","labelCol","span","wrapperCol","name","onFinish","values","email","password","confirm","register","resetFields","size","style","width","scrollToFirstError","children","_jsx","label","rules","type","message","required","Input","hasFeedback","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","whitespace","xs","offset","sm","Button","htmlType","Register","HelmetProvider","Helmet","RegisterForm"],"sourceRoot":""}